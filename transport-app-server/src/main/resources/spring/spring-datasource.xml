<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <bean id="sysDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${sys.jdbc.url}" />
        <property name="username" value="${sys.jdbc.username}" />
        <property name="password" value="${sys.jdbc.password}" />
        <property name="filters" value="stat" />
        <property name="maxActive" value="100" />
        <property name="initialSize" value="20" />
        <property name="maxWait" value="60000" />
        <property name="minIdle" value="20" />
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="200" />
    </bean>

    <bean id="sysSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="sysDataSource"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="mapperLocations">
            <list>
                <value>classpath*:mybatis/mappers/**/*.xml</value>
            </list>
        </property>
    </bean>

    <bean id="sysTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="sysDataSource"/>
    </bean>

    <bean id="sysTransactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="sysTransactionManager"/>
    </bean>

    <!--inject dao list -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionTemplateBeanName" value="sysSqlSessionTemplate"/>
        <property name="basePackage" value="com.gistandard.transport"/>
        <property name="annotationClass" value="com.gistandard.transport.base.annotation.MyBatisRepository"/>
    </bean>

    <!-- SqlSessionTemplate是我们代码中使用的SQL模板对象，用来操作数据库 -->
    <bean id="sysSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sysSqlSessionFactory"/>
    </bean>


    <!-- 基于注解的事务配置-->
    <tx:annotation-driven transaction-manager="sysTransactionManager" proxy-target-class="true"/>

</beans>