<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>transport-parent</artifactId>
        <groupId>com.gistandard.transport</groupId>
        <version>1.0.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>transport-web</artifactId>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>com.gistandard.transport</groupId>
            <artifactId>transport-base</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.gistandard.transport</groupId>
            <artifactId>transport-web-dubbo</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.gistandard.transport</groupId>
            <artifactId>transport-common</artifactId>
            <version>1.0.1</version>
            <exclusions>
                <exclusion>
                    <groupId>com.gistandard.transport</groupId>
                    <artifactId>transport-base</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.gistandard.transport</groupId>
            <artifactId>transport-order</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.gistandard.transport</groupId>
            <artifactId>transport-pay</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.gistandard.transport</groupId>
            <artifactId>transport-quote</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.gistandard.transport</groupId>
            <artifactId>transport-sms</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.5.1</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!-- compiler插件, 设定JDK版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            <!-- resources插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
            </plugin>
            <plugin>
                <!-- YUI Compressor Maven压缩插件 -->
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- 读取js,css文件采用UTF-8编码 -->
                    <encoding>UTF-8</encoding>
                    <!-- 不显示js可能的错误 -->
                    <jswarn>false</jswarn>
                    <!-- 若存在已压缩的文件，会先对比源文件是否有改动。有改动便压缩，无改动就不压缩 -->
                    <force>true</force>
                    <!-- 在指定的列号后插入新行 -->
                    <linebreakpos>-1</linebreakpos>
                    <!-- 压缩后保存文件无后缀 -->
                    <nosuffix>true</nosuffix>
                    <!-- 源目录，即需压缩的根目录 -->
                    <sourceDirectory>${basedir}/src/main/webapp</sourceDirectory>
                    <outputDirectory>${project.build.directory}/${project.build.finalName}/</outputDirectory>
                    <!-- 压缩js和css文件 -->
                    <includes>
                        <include>script/**/*.js</include>
                        <include>script/**/*.css</include>
                        <include>css/*.css</include>
                    </includes>

                </configuration>
            </plugin>
            <!--cxf 插件-->
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-java2ws-plugin</artifactId>
                <version>${cxf.version}</version>
            </plugin>
            <!-- test插件, 仅测试名称为*Test的类,使用支持分组测试的surefire-junit47 driver -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.7.2</version>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>
            <!--集成测试-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <skipTests>true</skipTests>
                    <includes>
                        <include>**/it/*Test*.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 测试覆盖率 -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.1.201405082137</version>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>
                                ${project.build.directory}/coverage-reports/jacoco.exec
                            </destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>
                                ${project.build.directory}/coverage-reports/jacoco.exec
                            </dataFile>
                            <outputDirectory>
                                ${project.reporting.outputDirectory}/jacoco
                            </outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>
                                ${project.build.directory}/coverage-reports/jacoco.exec
                            </destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>
                                ${project.build.directory}/coverage-reports/jacoco.exec
                            </dataFile>
                            <outputDirectory>
                                ${project.reporting.outputDirectory}/jacoco
                            </outputDirectory>
                            <sourceEncoding>UTF-8</sourceEncoding>
                            <outputEncoding>UTF-8</outputEncoding>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- war打包插件, 设定war包名称不带版本号 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <warSourceExcludes>
                        script/locale/*.js,
                        script/jquery/**/*.js,
                        script/jquery/**/*.css,
                        script/jQueryUpload/**/*.js,
                        script/jQueryUpload/**/*.css,
                        script/layer/**/*.js,
                        script/layer/**/*.css,
                        script/validator/**/*.js,
                        script/validator/**/*.css,
                        css/*.css,
                        resources/database/*.sql
                    </warSourceExcludes>
                    <warName>${project.artifactId}-${project.version}-${maven.build.timestamp}</warName>
                    <outputDirectory>${project.basedir}/wars/${maven.build.timestamp}/${project.version}</outputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
            </plugin>
            <!-- clean插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
            </plugin>

            <!-- install插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.1</version>
            </plugin>
            <plugin>
                <groupId>org.jvnet.maven-antrun-extended-plugin</groupId>
                <artifactId>maven-antrun-extended-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks>
                                <delete dir="./output"/>
                                <mkdir dir="./output"/>
                                <copy todir="./output"  preservelastmodified="true">
                                    <fileset dir="target">
                                        <include name="*.zip"/>
                                    </fileset>
                                </copy>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- ant插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
            </plugin>
            <!--转unicode编码-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native2ascii-maven-plugin</artifactId>
                <version>1.0-beta-1</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <src>src/main/resources/${message.dir.rel}</src>
                    <dest>${project.build.outputDirectory}/${message.dir.rel}</dest>
                    <includes>
                        <include>**/*.properties</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>native2ascii-utf8</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>native2ascii</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
