
package com.gistandard.transport.order.webservice.client.merchant.order;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.2
 * 2017-04-24T15:12:19.908+08:00
 * Generated source version: 3.1.2
 * 
 */
public final class MobileRecOrderWebService_MobileRecOrderWebServiceImplPort_Client {

    private static final QName SERVICE_NAME = new QName("http://webService.mobileRecOrder.dispatch.transport.gistandard.com/", "MobileRecOrderWebServiceImplService");

    private MobileRecOrderWebService_MobileRecOrderWebServiceImplPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = MobileRecOrderWebServiceImplService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        MobileRecOrderWebServiceImplService ss = new MobileRecOrderWebServiceImplService(wsdlURL, SERVICE_NAME);
        MobileRecOrderWebService port = ss.getMobileRecOrderWebServiceImplPort();  
        
        {
        System.out.println("Invoking updateRouteEndTran...");
        String _updateRouteEndTran_busiNo = "";
        long _updateRouteEndTran_dispatchId = 0;
        String _updateRouteEndTran_type = "";
        Integer _updateRouteEndTran_createAccountId = null;
        Integer _updateRouteEndTran_toAccountId = null;
        try {
            BaseRequestResult _updateRouteEndTran__return = port.updateRouteEndTran(_updateRouteEndTran_busiNo, _updateRouteEndTran_dispatchId, _updateRouteEndTran_type, _updateRouteEndTran_createAccountId, _updateRouteEndTran_toAccountId);
            System.out.println("updateRouteEndTran.result=" + _updateRouteEndTran__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking checkRouteExists...");
        double _checkRouteExists_arg0 = 0.0;
        double _checkRouteExists_arg1 = 0.0;
        double _checkRouteExists_arg2 = 0.0;
        double _checkRouteExists_arg3 = 0.0;
        try {
            BaseRequestResult _checkRouteExists__return = port.checkRouteExists(_checkRouteExists_arg0, _checkRouteExists_arg1, _checkRouteExists_arg2, _checkRouteExists_arg3);
            System.out.println("checkRouteExists.result=" + _checkRouteExists__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking selectRouteByBusi...");
        String _selectRouteByBusi_busiNo = "";
        String _selectRouteByBusi_type = "";
        Integer _selectRouteByBusi_wAccountId = null;
        try {
            String _selectRouteByBusi__return = port.selectRouteByBusi(_selectRouteByBusi_busiNo, _selectRouteByBusi_type, _selectRouteByBusi_wAccountId);
            System.out.println("selectRouteByBusi.result=" + _selectRouteByBusi__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking updateDispatchStatusById...");
        Long _updateDispatchStatusById_arg0 = null;
        int _updateDispatchStatusById_arg1 = 0;
        BaseRequestResult _updateDispatchStatusById__return = port.updateDispatchStatusById(_updateDispatchStatusById_arg0, _updateDispatchStatusById_arg1);
        System.out.println("updateDispatchStatusById.result=" + _updateDispatchStatusById__return);


        }
        {
        System.out.println("Invoking addRouteEndTran...");
        java.util.List<DispatchExtend> _addRouteEndTran_arg0 = null;
        try {
            java.util.List<BaseRequestResult> _addRouteEndTran__return = port.addRouteEndTran(_addRouteEndTran_arg0);
            System.out.println("addRouteEndTran.result=" + _addRouteEndTran__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getDispatchDetail...");
        Long _getDispatchDetail_arg0 = null;
        RequestDetailResult _getDispatchDetail__return = port.getDispatchDetail(_getDispatchDetail_arg0);
        System.out.println("getDispatchDetail.result=" + _getDispatchDetail__return);


        }
        {
        System.out.println("Invoking selectOrderCustomerList...");
        String _selectOrderCustomerList_arg0 = "";
        String _selectOrderCustomerList_arg1 = "";
        Integer _selectOrderCustomerList_arg2 = null;
        String _selectOrderCustomerList__return = port.selectOrderCustomerList(_selectOrderCustomerList_arg0, _selectOrderCustomerList_arg1, _selectOrderCustomerList_arg2);
        System.out.println("selectOrderCustomerList.result=" + _selectOrderCustomerList__return);


        }
        {
        System.out.println("Invoking batchMobileToMobile...");
        java.util.List<MobileToMobileParam> _batchMobileToMobile_arg0 = null;
        java.util.List<MobileToMobileDataResult> _batchMobileToMobile__return = port.batchMobileToMobile(_batchMobileToMobile_arg0);
        System.out.println("batchMobileToMobile.result=" + _batchMobileToMobile__return);


        }
        {
        System.out.println("Invoking checkAccountExistRoute...");
        String _checkAccountExistRoute_arg0 = "";
        String _checkAccountExistRoute__return = port.checkAccountExistRoute(_checkAccountExistRoute_arg0);
        System.out.println("checkAccountExistRoute.result=" + _checkAccountExistRoute__return);


        }
        {
        System.out.println("Invoking revokeRouteWPath...");
        String _revokeRouteWPath_busiBookNo = "";
        Integer _revokeRouteWPath_fromAccountId = null;
        try {
            BaseRequestResult _revokeRouteWPath__return = port.revokeRouteWPath(_revokeRouteWPath_busiBookNo, _revokeRouteWPath_fromAccountId);
            System.out.println("revokeRouteWPath.result=" + _revokeRouteWPath__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getRouteTimeBySchemaId...");
        java.util.List<Long> _getRouteTimeBySchemaId_arg0 = null;
        String _getRouteTimeBySchemaId__return = port.getRouteTimeBySchemaId(_getRouteTimeBySchemaId_arg0);
        System.out.println("getRouteTimeBySchemaId.result=" + _getRouteTimeBySchemaId__return);


        }
        {
        System.out.println("Invoking checkRouteExistsByAddress...");
        double _checkRouteExistsByAddress_arg0 = 0.0;
        double _checkRouteExistsByAddress_arg1 = 0.0;
        double _checkRouteExistsByAddress_arg2 = 0.0;
        double _checkRouteExistsByAddress_arg3 = 0.0;
        String _checkRouteExistsByAddress_arg4 = "";
        String _checkRouteExistsByAddress_arg5 = "";
        String _checkRouteExistsByAddress_arg6 = "";
        String _checkRouteExistsByAddress_arg7 = "";
        String _checkRouteExistsByAddress_arg8 = "";
        String _checkRouteExistsByAddress_arg9 = "";
        try {
            BaseRequestResult _checkRouteExistsByAddress__return = port.checkRouteExistsByAddress(_checkRouteExistsByAddress_arg0, _checkRouteExistsByAddress_arg1, _checkRouteExistsByAddress_arg2, _checkRouteExistsByAddress_arg3, _checkRouteExistsByAddress_arg4, _checkRouteExistsByAddress_arg5, _checkRouteExistsByAddress_arg6, _checkRouteExistsByAddress_arg7, _checkRouteExistsByAddress_arg8, _checkRouteExistsByAddress_arg9);
            System.out.println("checkRouteExistsByAddress.result=" + _checkRouteExistsByAddress__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getAllWaMiStationByRouteAndExpressCode...");
        String _getAllWaMiStationByRouteAndExpressCode_arg0 = "";
        Integer _getAllWaMiStationByRouteAndExpressCode_arg1 = null;
        String _getAllWaMiStationByRouteAndExpressCode__return = port.getAllWaMiStationByRouteAndExpressCode(_getAllWaMiStationByRouteAndExpressCode_arg0, _getAllWaMiStationByRouteAndExpressCode_arg1);
        System.out.println("getAllWaMiStationByRouteAndExpressCode.result=" + _getAllWaMiStationByRouteAndExpressCode__return);


        }
        {
        System.out.println("Invoking addRouteWPath...");
        String _addRouteWPath_busiBookNo = "";
        Integer _addRouteWPath_fromAccountId = null;
        try {
            BaseRequestResult _addRouteWPath__return = port.addRouteWPath(_addRouteWPath_busiBookNo, _addRouteWPath_fromAccountId);
            System.out.println("addRouteWPath.result=" + _addRouteWPath__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking mobileToHub...");
        Integer _mobileToHub_arg0 = null;
        java.util.List<OrderObject> _mobileToHub_arg1 = null;
        Integer _mobileToHub_arg2 = null;
        MobileToHubDataResult _mobileToHub__return = port.mobileToHub(_mobileToHub_arg0, _mobileToHub_arg1, _mobileToHub_arg2);
        System.out.println("mobileToHub.result=" + _mobileToHub__return);


        }
        {
        System.out.println("Invoking updateOrderRouteSchemaId...");
        String _updateOrderRouteSchemaId_arg0 = "";
        Double _updateOrderRouteSchemaId_arg1 = null;
        Double _updateOrderRouteSchemaId_arg2 = null;
        Integer _updateOrderRouteSchemaId_arg3 = null;
        try {
            RouteRequestResult _updateOrderRouteSchemaId__return = port.updateOrderRouteSchemaId(_updateOrderRouteSchemaId_arg0, _updateOrderRouteSchemaId_arg1, _updateOrderRouteSchemaId_arg2, _updateOrderRouteSchemaId_arg3);
            System.out.println("updateOrderRouteSchemaId.result=" + _updateOrderRouteSchemaId__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking batchAddRoutePoPTran...");
        java.util.List<RoutePoPTranParam> _batchAddRoutePoPTran_arg0 = null;
        java.util.List<BaseRequestResult> _batchAddRoutePoPTran__return = port.batchAddRoutePoPTran(_batchAddRoutePoPTran_arg0);
        System.out.println("batchAddRoutePoPTran.result=" + _batchAddRoutePoPTran__return);


        }
        {
        System.out.println("Invoking hubAcceptOrder...");
        String _hubAcceptOrder_arg0 = "";
        Integer _hubAcceptOrder_arg1 = null;
        HubToHubDataResult _hubAcceptOrder__return = port.hubAcceptOrder(_hubAcceptOrder_arg0, _hubAcceptOrder_arg1);
        System.out.println("hubAcceptOrder.result=" + _hubAcceptOrder__return);


        }
        {
        System.out.println("Invoking mStationAcceptOrder...");
        String _mStationAcceptOrder_arg0 = "";
        Integer _mStationAcceptOrder_arg1 = null;
        try {
            BaseRequestResult _mStationAcceptOrder__return = port.mStationAcceptOrder(_mStationAcceptOrder_arg0, _mStationAcceptOrder_arg1);
            System.out.println("mStationAcceptOrder.result=" + _mStationAcceptOrder__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking checkCancelDispatch...");
        int _checkCancelDispatch_arg0 = 0;
        RequestDetailResult _checkCancelDispatch__return = port.checkCancelDispatch(_checkCancelDispatch_arg0);
        System.out.println("checkCancelDispatch.result=" + _checkCancelDispatch__return);


        }
        {
        System.out.println("Invoking recOrder...");
        Integer _recOrder_arg0 = null;
        String _recOrder_arg1 = "";
        Long _recOrder_arg2 = null;
        Integer _recOrder_arg3 = null;
        RequestResult _recOrder__return = port.recOrder(_recOrder_arg0, _recOrder_arg1, _recOrder_arg2, _recOrder_arg3);
        System.out.println("recOrder.result=" + _recOrder__return);


        }
        {
        System.out.println("Invoking arrangeOrder...");
        Integer _arrangeOrder_arg0 = null;
        String _arrangeOrder_arg1 = "";
        Long _arrangeOrder_arg2 = null;
        Integer _arrangeOrder_arg3 = null;
        Integer _arrangeOrder_arg4 = null;
        javax.xml.datatype.XMLGregorianCalendar _arrangeOrder_arg5 = null;
        RequestResult _arrangeOrder__return = port.arrangeOrder(_arrangeOrder_arg0, _arrangeOrder_arg1, _arrangeOrder_arg2, _arrangeOrder_arg3, _arrangeOrder_arg4, _arrangeOrder_arg5);
        System.out.println("arrangeOrder.result=" + _arrangeOrder__return);


        }
        {
        System.out.println("Invoking operateOrder...");
        Integer _operateOrder_arg0 = null;
        java.util.List<Long> _operateOrder_arg1 = null;
        String _operateOrder_arg2 = "";
        BaseRequestResult _operateOrder__return = port.operateOrder(_operateOrder_arg0, _operateOrder_arg1, _operateOrder_arg2);
        System.out.println("operateOrder.result=" + _operateOrder__return);


        }
        {
        System.out.println("Invoking batchUpdateOrderRouteId...");
        java.util.List<String> _batchUpdateOrderRouteId_arg0 = null;
        try {
            BaseRequestResult _batchUpdateOrderRouteId__return = port.batchUpdateOrderRouteId(_batchUpdateOrderRouteId_arg0);
            System.out.println("batchUpdateOrderRouteId.result=" + _batchUpdateOrderRouteId__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getRouteInfoBySchemaIds...");
        java.util.List<Long> _getRouteInfoBySchemaIds_arg0 = null;
        String _getRouteInfoBySchemaIds__return = port.getRouteInfoBySchemaIds(_getRouteInfoBySchemaIds_arg0);
        System.out.println("getRouteInfoBySchemaIds.result=" + _getRouteInfoBySchemaIds__return);


        }
        {
        System.out.println("Invoking updateOrderRouteId...");
        String _updateOrderRouteId_arg0 = "";
        try {
            BaseRequestResult _updateOrderRouteId__return = port.updateOrderRouteId(_updateOrderRouteId_arg0);
            System.out.println("updateOrderRouteId.result=" + _updateOrderRouteId__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking applyCancelHubToHub...");
        String _applyCancelHubToHub_arg0 = "";
        long _applyCancelHubToHub_arg1 = 0;
        HubToHubDataResult _applyCancelHubToHub__return = port.applyCancelHubToHub(_applyCancelHubToHub_arg0, _applyCancelHubToHub_arg1);
        System.out.println("applyCancelHubToHub.result=" + _applyCancelHubToHub__return);


        }
        {
        System.out.println("Invoking newMobileToWHub...");
        NewMobileToWHubParam _newMobileToWHub_arg0 = null;
        HubToHubDataResult _newMobileToWHub__return = port.newMobileToWHub(_newMobileToWHub_arg0);
        System.out.println("newMobileToWHub.result=" + _newMobileToWHub__return);


        }
        {
        System.out.println("Invoking deleteHubToHub...");
        String _deleteHubToHub_arg0 = "";
        long _deleteHubToHub_arg1 = 0;
        HubToHubDataResult _deleteHubToHub__return = port.deleteHubToHub(_deleteHubToHub_arg0, _deleteHubToHub_arg1);
        System.out.println("deleteHubToHub.result=" + _deleteHubToHub__return);


        }
        {
        System.out.println("Invoking mobileToMobile...");
        Integer _mobileToMobile_arg0 = null;
        String _mobileToMobile_arg1 = "";
        Integer _mobileToMobile_arg2 = null;
        String _mobileToMobile_arg3 = "";
        Integer _mobileToMobile_arg4 = null;
        Integer _mobileToMobile_arg5 = null;
        String _mobileToMobile_arg6 = "";
        MobileToMobileDataResult _mobileToMobile__return = port.mobileToMobile(_mobileToMobile_arg0, _mobileToMobile_arg1, _mobileToMobile_arg2, _mobileToMobile_arg3, _mobileToMobile_arg4, _mobileToMobile_arg5, _mobileToMobile_arg6);
        System.out.println("mobileToMobile.result=" + _mobileToMobile__return);


        }
        {
        System.out.println("Invoking batchMStationAcceptOrder...");
        java.util.List<MsAcceptOrderParam> _batchMStationAcceptOrder_arg0 = null;
        try {
            java.util.List<BaseRequestResult> _batchMStationAcceptOrder__return = port.batchMStationAcceptOrder(_batchMStationAcceptOrder_arg0);
            System.out.println("batchMStationAcceptOrder.result=" + _batchMStationAcceptOrder__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking cancelMobileDispatch...");
        Integer _cancelMobileDispatch_arg0 = null;
        Integer _cancelMobileDispatch_arg1 = null;
        RequestDetailResult _cancelMobileDispatch__return = port.cancelMobileDispatch(_cancelMobileDispatch_arg0, _cancelMobileDispatch_arg1);
        System.out.println("cancelMobileDispatch.result=" + _cancelMobileDispatch__return);


        }
        {
        System.out.println("Invoking confirmCancelDispatch...");
        int _confirmCancelDispatch_arg0 = 0;
        boolean _confirmCancelDispatch_arg1 = false;
        try {
            RequestDetailResult _confirmCancelDispatch__return = port.confirmCancelDispatch(_confirmCancelDispatch_arg0, _confirmCancelDispatch_arg1);
            System.out.println("confirmCancelDispatch.result=" + _confirmCancelDispatch__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking addRoutePoPTran...");
        String _addRoutePoPTran_busiBookNo = "";
        Integer _addRoutePoPTran_fromAccountId = null;
        try {
            BaseRequestResult _addRoutePoPTran__return = port.addRoutePoPTran(_addRoutePoPTran_busiBookNo, _addRoutePoPTran_fromAccountId);
            System.out.println("addRoutePoPTran.result=" + _addRoutePoPTran__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking batchCheckRouteExists...");
        java.util.List<Locitude> _batchCheckRouteExists_arg0 = null;
        try {
            BaseRequestResult _batchCheckRouteExists__return = port.batchCheckRouteExists(_batchCheckRouteExists_arg0);
            System.out.println("batchCheckRouteExists.result=" + _batchCheckRouteExists__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getRouteInfoBySchemaId...");
        Long _getRouteInfoBySchemaId_arg0 = null;
        String _getRouteInfoBySchemaId__return = port.getRouteInfoBySchemaId(_getRouteInfoBySchemaId_arg0);
        System.out.println("getRouteInfoBySchemaId.result=" + _getRouteInfoBySchemaId__return);


        }
        {
        System.out.println("Invoking hubToHub...");
        String _hubToHub_arg0 = "";
        java.util.List<DispatchExtend> _hubToHub_arg1 = null;
        HubToHubDataResult _hubToHub__return = port.hubToHub(_hubToHub_arg0, _hubToHub_arg1);
        System.out.println("hubToHub.result=" + _hubToHub__return);


        }
        {
        System.out.println("Invoking getAllMiMovingByMiStopId...");
        String _getAllMiMovingByMiStopId_arg0 = "";
        String _getAllMiMovingByMiStopId_arg1 = "";
        String _getAllMiMovingByMiStopId__return = port.getAllMiMovingByMiStopId(_getAllMiMovingByMiStopId_arg0, _getAllMiMovingByMiStopId_arg1);
        System.out.println("getAllMiMovingByMiStopId.result=" + _getAllMiMovingByMiStopId__return);


        }

        System.exit(0);
    }

}
